// <auto-generated />
using System;
using MROS_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MROS_API.Data.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20191126171725_DBInitial")]
    partial class DBInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MROS_API.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("Birhdate");

                    b.Property<string>("FullName");

                    b.Property<int>("OrderCount");

                    b.Property<string>("Phone");

                    b.Property<string>("ProfilePhoto");

                    b.Property<DateTime>("RegDateTime");

                    b.Property<bool>("Sex");

                    b.Property<bool>("Status");

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MROS_API.Models.CustomerFeedBack", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message");

                    b.Property<int?>("OwnerID");

                    b.Property<double>("RatingFlavor");

                    b.Property<double>("RatingService");

                    b.Property<double>("RatingWaiter");

                    b.Property<int?>("RestaurantID");

                    b.Property<double>("ServiceTime");

                    b.HasKey("ID");

                    b.HasIndex("OwnerID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("CustomerFeeds");
                });

            modelBuilder.Entity("MROS_API.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RestaurantID");

                    b.Property<bool>("Status");

                    b.Property<int?>("TableID");

                    b.Property<double>("TotalCost");

                    b.HasKey("ID");

                    b.HasIndex("RestaurantID");

                    b.HasIndex("TableID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MROS_API.Models.Portion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cost");

                    b.Property<string>("PortionName");

                    b.Property<int?>("ProductID");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.ToTable("Portions");
                });

            modelBuilder.Entity("MROS_API.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IMG");

                    b.Property<bool>("IsPortionable");

                    b.Property<string>("Name");

                    b.Property<int>("Preparation");

                    b.Property<double>("Price");

                    b.Property<int?>("ProductCategoryID");

                    b.Property<int?>("RestaurantID");

                    b.HasKey("ID");

                    b.HasIndex("ProductCategoryID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MROS_API.Models.ProductCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatIMG");

                    b.Property<string>("CatName");

                    b.Property<int>("Counter");

                    b.Property<int?>("RestaurantID");

                    b.Property<bool>("Status");

                    b.HasKey("ID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("MROS_API.Models.ProductDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("ProductID");

                    b.Property<bool>("Status");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductDetails");
                });

            modelBuilder.Entity("MROS_API.Models.Restaurant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("FullName");

                    b.Property<string>("Information");

                    b.Property<double>("Latitude");

                    b.Property<string>("Logo");

                    b.Property<double>("Longitude");

                    b.Property<int>("OrderCount");

                    b.Property<string>("Phone");

                    b.Property<bool>("Status");

                    b.Property<double>("TotalGain");

                    b.HasKey("ID");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("MROS_API.Models.Table", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RestaurantID");

                    b.Property<bool>("Status");

                    b.Property<string>("TableName");

                    b.HasKey("ID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("MROS_API.Models.CustomerFeedBack", b =>
                {
                    b.HasOne("MROS_API.Models.Customer", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerID");

                    b.HasOne("MROS_API.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantID");
                });

            modelBuilder.Entity("MROS_API.Models.Order", b =>
                {
                    b.HasOne("MROS_API.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantID");

                    b.HasOne("MROS_API.Models.Table", "Table")
                        .WithMany()
                        .HasForeignKey("TableID");
                });

            modelBuilder.Entity("MROS_API.Models.Portion", b =>
                {
                    b.HasOne("MROS_API.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID");
                });

            modelBuilder.Entity("MROS_API.Models.Product", b =>
                {
                    b.HasOne("MROS_API.Models.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryID");

                    b.HasOne("MROS_API.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantID");
                });

            modelBuilder.Entity("MROS_API.Models.ProductCategory", b =>
                {
                    b.HasOne("MROS_API.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantID");
                });

            modelBuilder.Entity("MROS_API.Models.ProductDetail", b =>
                {
                    b.HasOne("MROS_API.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID");
                });

            modelBuilder.Entity("MROS_API.Models.Table", b =>
                {
                    b.HasOne("MROS_API.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantID");
                });
#pragma warning restore 612, 618
        }
    }
}
